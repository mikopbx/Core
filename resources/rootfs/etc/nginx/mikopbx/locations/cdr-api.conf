location /pbxcore/api/cdr/v2/playback {
    root /storage/usbdisk1/mikopbx;
    set_by_lua $session_exists '
        local file = "/var/lib/php/session/sess_"..tostring(ngx.var.cookie_PHPSESSID);
        local f = io.open(file, "rb")
        local result = "fail";
        if f then
            f:close()
            result = "ok"
        end
        return result;
    ';
    if ( $session_exists = 'fail' ) {
        rewrite ^ /pbxcore/api/nchan/auth last;
    }
    set_by_lua $download '
        if (ngx.var.arg_download) then
            return ngx.var.arg_download;
        end
        return 0;
    ';
    set_by_lua $filename '
        if (ngx.var.arg_filename) then
            return ngx.var.arg_filename;
        end
        local path = ngx.unescape_uri(ngx.var.arg_view):reverse();
        return string.sub(path, 0, string.find(path,"/") - 1):reverse();
    ';

    set_by_lua $result_url '
        local path = ngx.unescape_uri(ngx.var.arg_view);
        return "/pbxcore/api/cdr/v2/get-record-file"..string.gsub(path,ngx.var.document_root,"");
    ';
    try_files "$result_url" "$result_url";
}

location ^~/pbxcore/api/cdr/v2/get-record-file  {
    alias /storage/usbdisk1/mikopbx;
    set_by_lua $is_auth '
        if (ngx.var.session_exists == nil ) then
            return "fail";
        end
        return ngx.var.session_exists;
    ';
    if ( $session_exists != 'ok' ) {
        rewrite ^ /pbxcore/api/nchan/auth last;
    }
    if ( $download = '1' ) {
        add_header Content-disposition "attachment; filename=$filename";
    }
}