<?php
/*
 * MikoPBX - free phone system for small business
 * Copyright (C) 2017-2020 Alexey Portnov and Nikolay Beketov
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

namespace MikoPBX\Core\Rc;
use MikoPBX\Core\System\{Processes, Storage, Util};
require_once('Globals.php');

$REDON      = "\033[31;1m";
$REDOFF     = "\033[0m";
$GREENON    = "\033[32;1m";
$GREENOFF   = "\033[0m";
$fp         = fopen('php://stdin', 'r');

$storage    = new Storage();
$DEVICE     = $storage->getRecoverDiskName();
$VERSION    = trim(file_get_contents('/offload/version'));
system('clear');
echo "\n";
echo Util::translate("Install or recovery")."\n";
echo "*******************************\n";
echo "1) ".Util::translate('Install').".   ${REDON}".Util::translate('All settings will be lost!')."${REDOFF}\n";
echo "2) ".Util::translate('Reinstall to')." ${VERSION}. ${GREENON}".Util::translate('All settings will be kept!')."${GREENOFF}\n";
echo "3) ".Util::translate('Cancel')."\n\n";
echo Util::translate('Enter a number').": ";

$input = trim(fgets($fp));
switch ($input) {
    case 1:
        file_put_contents('/tmp/ejectcd', '');
        include '/etc/rc/initial.install';
        sleep(300);
        break;
    case 2:
        file_put_contents('/tmp/ejectcd', '');
        $pbx_firmwarePath = Util::which('pbx_firmware');
        Processes::mwExecBg("{$pbx_firmwarePath} /offload/firmware.img.gz ${DEVICE}");
        sleep(600);
        break;
    case 3:
        sleep(2);
        break;
}
