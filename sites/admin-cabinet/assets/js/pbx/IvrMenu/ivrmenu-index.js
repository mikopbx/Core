"use strict";

/*
 * MikoPBX - free phone system for small business
 * Copyright Â© 2017-2023 Alexey Portnov and Nikolay Beketov
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

/* global globalRootUrl, SemanticLocalization */

/**
 * Define object which manage IVR (Interactive Voice Menu) list
 *
 * @module IvrMenuTable
 */
var IvrMenuTable = {
  $ivrTable: $('#ivr-menu-table'),
  initialize: function initialize() {
    // Add double click listener to table cells
    $('.menu-row td').on('dblclick', function (e) {
      // When cell is double clicked, navigate to corresponding modify page
      var id = $(e.target).closest('tr').attr('id');
      window.location = "".concat(globalRootUrl, "ivr-menu/modify/").concat(id);
    }); // Initialize the data table

    IvrMenuTable.initializeDataTable();
  },

  /**
   * Initialize data tables on table
   */
  initializeDataTable: function initializeDataTable() {
    IvrMenuTable.$ivrTable.DataTable({
      lengthChange: false,
      // Disable ability to change number of entries shown
      paging: false,
      // Disable pagination
      columns: [null, null, null, null, null, {
        orderable: false,
        searchable: false
      }],
      order: [1, 'asc'],
      language: SemanticLocalization.dataTableLocalisation
    }); // Move the "Add New" button to the first eight-column div

    $('#add-new-button').appendTo($('div.eight.column:eq(0)'));
  }
};
/**
 *  Initialize IVR menu table on document ready
 */

$(document).ready(function () {
  IvrMenuTable.initialize();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9JdnJNZW51L2l2cm1lbnUtaW5kZXguanMiXSwibmFtZXMiOlsiSXZyTWVudVRhYmxlIiwiJGl2clRhYmxlIiwiJCIsImluaXRpYWxpemUiLCJvbiIsImUiLCJpZCIsInRhcmdldCIsImNsb3Nlc3QiLCJhdHRyIiwid2luZG93IiwibG9jYXRpb24iLCJnbG9iYWxSb290VXJsIiwiaW5pdGlhbGl6ZURhdGFUYWJsZSIsIkRhdGFUYWJsZSIsImxlbmd0aENoYW5nZSIsInBhZ2luZyIsImNvbHVtbnMiLCJvcmRlcmFibGUiLCJzZWFyY2hhYmxlIiwib3JkZXIiLCJsYW5ndWFnZSIsIlNlbWFudGljTG9jYWxpemF0aW9uIiwiZGF0YVRhYmxlTG9jYWxpc2F0aW9uIiwiYXBwZW5kVG8iLCJkb2N1bWVudCIsInJlYWR5Il0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1BLFlBQVksR0FBRztBQUNqQkMsRUFBQUEsU0FBUyxFQUFFQyxDQUFDLENBQUMsaUJBQUQsQ0FESztBQUVqQkMsRUFBQUEsVUFGaUIsd0JBRUo7QUFFVDtBQUNBRCxJQUFBQSxDQUFDLENBQUMsY0FBRCxDQUFELENBQWtCRSxFQUFsQixDQUFxQixVQUFyQixFQUFpQyxVQUFDQyxDQUFELEVBQU87QUFDcEM7QUFDQSxVQUFNQyxFQUFFLEdBQUdKLENBQUMsQ0FBQ0csQ0FBQyxDQUFDRSxNQUFILENBQUQsQ0FBWUMsT0FBWixDQUFvQixJQUFwQixFQUEwQkMsSUFBMUIsQ0FBK0IsSUFBL0IsQ0FBWDtBQUNBQyxNQUFBQSxNQUFNLENBQUNDLFFBQVAsYUFBcUJDLGFBQXJCLDZCQUFxRE4sRUFBckQ7QUFDSCxLQUpELEVBSFMsQ0FTVDs7QUFDQU4sSUFBQUEsWUFBWSxDQUFDYSxtQkFBYjtBQUNILEdBYmdCOztBQWVqQjtBQUNKO0FBQ0E7QUFDSUEsRUFBQUEsbUJBbEJpQixpQ0FrQks7QUFDbEJiLElBQUFBLFlBQVksQ0FBQ0MsU0FBYixDQUF1QmEsU0FBdkIsQ0FBaUM7QUFDN0JDLE1BQUFBLFlBQVksRUFBRSxLQURlO0FBQ1I7QUFDckJDLE1BQUFBLE1BQU0sRUFBRSxLQUZxQjtBQUVkO0FBQ2ZDLE1BQUFBLE9BQU8sRUFBRSxDQUNMLElBREssRUFFTCxJQUZLLEVBR0wsSUFISyxFQUlMLElBSkssRUFLTCxJQUxLLEVBTUw7QUFBQ0MsUUFBQUEsU0FBUyxFQUFFLEtBQVo7QUFBbUJDLFFBQUFBLFVBQVUsRUFBRTtBQUEvQixPQU5LLENBSG9CO0FBVzdCQyxNQUFBQSxLQUFLLEVBQUUsQ0FBQyxDQUFELEVBQUksS0FBSixDQVhzQjtBQVk3QkMsTUFBQUEsUUFBUSxFQUFFQyxvQkFBb0IsQ0FBQ0M7QUFaRixLQUFqQyxFQURrQixDQWdCbEI7O0FBQ0FyQixJQUFBQSxDQUFDLENBQUMsaUJBQUQsQ0FBRCxDQUFxQnNCLFFBQXJCLENBQThCdEIsQ0FBQyxDQUFDLHdCQUFELENBQS9CO0FBQ0g7QUFwQ2dCLENBQXJCO0FBdUNBO0FBQ0E7QUFDQTs7QUFDQUEsQ0FBQyxDQUFDdUIsUUFBRCxDQUFELENBQVlDLEtBQVosQ0FBa0IsWUFBTTtBQUNwQjFCLEVBQUFBLFlBQVksQ0FBQ0csVUFBYjtBQUNILENBRkQiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogTWlrb1BCWCAtIGZyZWUgcGhvbmUgc3lzdGVtIGZvciBzbWFsbCBidXNpbmVzc1xuICogQ29weXJpZ2h0IMKpIDIwMTctMjAyMyBBbGV4ZXkgUG9ydG5vdiBhbmQgTmlrb2xheSBCZWtldG92XG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLlxuICogSWYgbm90LCBzZWUgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqL1xuXG4vKiBnbG9iYWwgZ2xvYmFsUm9vdFVybCwgU2VtYW50aWNMb2NhbGl6YXRpb24gKi9cblxuLyoqXG4gKiBEZWZpbmUgb2JqZWN0IHdoaWNoIG1hbmFnZSBJVlIgKEludGVyYWN0aXZlIFZvaWNlIE1lbnUpIGxpc3RcbiAqXG4gKiBAbW9kdWxlIEl2ck1lbnVUYWJsZVxuICovXG5jb25zdCBJdnJNZW51VGFibGUgPSB7XG4gICAgJGl2clRhYmxlOiAkKCcjaXZyLW1lbnUtdGFibGUnKSxcbiAgICBpbml0aWFsaXplKCkge1xuXG4gICAgICAgIC8vIEFkZCBkb3VibGUgY2xpY2sgbGlzdGVuZXIgdG8gdGFibGUgY2VsbHNcbiAgICAgICAgJCgnLm1lbnUtcm93IHRkJykub24oJ2RibGNsaWNrJywgKGUpID0+IHtcbiAgICAgICAgICAgIC8vIFdoZW4gY2VsbCBpcyBkb3VibGUgY2xpY2tlZCwgbmF2aWdhdGUgdG8gY29ycmVzcG9uZGluZyBtb2RpZnkgcGFnZVxuICAgICAgICAgICAgY29uc3QgaWQgPSAkKGUudGFyZ2V0KS5jbG9zZXN0KCd0cicpLmF0dHIoJ2lkJyk7XG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSBgJHtnbG9iYWxSb290VXJsfWl2ci1tZW51L21vZGlmeS8ke2lkfWA7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIEluaXRpYWxpemUgdGhlIGRhdGEgdGFibGVcbiAgICAgICAgSXZyTWVudVRhYmxlLmluaXRpYWxpemVEYXRhVGFibGUoKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogSW5pdGlhbGl6ZSBkYXRhIHRhYmxlcyBvbiB0YWJsZVxuICAgICAqL1xuICAgIGluaXRpYWxpemVEYXRhVGFibGUoKSB7XG4gICAgICAgIEl2ck1lbnVUYWJsZS4kaXZyVGFibGUuRGF0YVRhYmxlKHtcbiAgICAgICAgICAgIGxlbmd0aENoYW5nZTogZmFsc2UsIC8vIERpc2FibGUgYWJpbGl0eSB0byBjaGFuZ2UgbnVtYmVyIG9mIGVudHJpZXMgc2hvd25cbiAgICAgICAgICAgIHBhZ2luZzogZmFsc2UsIC8vIERpc2FibGUgcGFnaW5hdGlvblxuICAgICAgICAgICAgY29sdW1uczogW1xuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICB7b3JkZXJhYmxlOiBmYWxzZSwgc2VhcmNoYWJsZTogZmFsc2V9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIG9yZGVyOiBbMSwgJ2FzYyddLFxuICAgICAgICAgICAgbGFuZ3VhZ2U6IFNlbWFudGljTG9jYWxpemF0aW9uLmRhdGFUYWJsZUxvY2FsaXNhdGlvbixcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gTW92ZSB0aGUgXCJBZGQgTmV3XCIgYnV0dG9uIHRvIHRoZSBmaXJzdCBlaWdodC1jb2x1bW4gZGl2XG4gICAgICAgICQoJyNhZGQtbmV3LWJ1dHRvbicpLmFwcGVuZFRvKCQoJ2Rpdi5laWdodC5jb2x1bW46ZXEoMCknKSk7XG4gICAgfSxcbn07XG5cbi8qKlxuICogIEluaXRpYWxpemUgSVZSIG1lbnUgdGFibGUgb24gZG9jdW1lbnQgcmVhZHlcbiAqL1xuJChkb2N1bWVudCkucmVhZHkoKCkgPT4ge1xuICAgIEl2ck1lbnVUYWJsZS5pbml0aWFsaXplKCk7XG59KTtcblxuIl19