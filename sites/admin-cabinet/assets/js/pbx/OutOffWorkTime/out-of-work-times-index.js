"use strict";

/*
 * MikoPBX - free phone system for small business
 * Copyright Â© 2017-2023 Alexey Portnov and Nikolay Beketov
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

/* global globalRootUrl,$ */

/**
 * Object for managing the Out-of-Work Times table.
 *
 * @module OutOfWorkTimesTable
 */
var OutOfWorkTimesTable = {
  /**
   * Initializes the Out-of-Work Times table.
   */
  initialize: function initialize() {
    // Bind double-click event to table cells
    $('.frame-row td').on('dblclick', function (e) {
      var id = $(e.target).closest('tr').attr('id');
      window.location = "".concat(globalRootUrl, "out-off-work-time/modify/").concat(id);
    }); // Initialize DataTable

    $('#time-frames-table').DataTable({
      lengthChange: false,
      paging: false,
      columns: [null, {
        orderable: false
      }, null, null, {
        orderable: false
      }],
      autoWidth: false,
      order: [1, 'asc'],
      language: SemanticLocalization.dataTableLocalisation,
      "drawCallback": function drawCallback(settings) {
        $("[data-content!=''][data-content]").popup();
      }
    }); // Move the "Add New" button to the first eight-column div

    $('#add-new-button').appendTo($('div.eight.column:eq(0)'));
    $('body').on('click', 'a.delete', function (e) {
      e.preventDefault();
      var id = $(e.target).closest('tr').attr('id');
      OutOfWorkTimesTable.deleteRule(id);
    });
  },

  /**
   * Deletes an extension with the given ID.
   * @param {string} id - The ID of the rule to delete.
   */
  deleteRule: function deleteRule(id) {
    $('.message.ajax').remove();
    $.api({
      url: "".concat(globalRootUrl, "out-off-work-time/delete/").concat(id),
      on: 'now',
      successTest: function successTest(response) {
        // test whether a JSON response is valid
        return response !== undefined && Object.keys(response).length > 0;
      },
      onSuccess: function onSuccess(response) {
        if (response.success === true) {
          $('#time-frames-table').find("tr[id=".concat(id, "]")).remove();
        } else {
          UserMessage.showError(response.message.error, globalTranslate.ex_ImpossibleToDeleteExtension);
        }
      }
    });
  }
};
/**
 *  Initialize out of work table on document ready
 */

$(document).ready(function () {
  OutOfWorkTimesTable.initialize();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9PdXRPZmZXb3JrVGltZS9vdXQtb2Ytd29yay10aW1lcy1pbmRleC5qcyJdLCJuYW1lcyI6WyJPdXRPZldvcmtUaW1lc1RhYmxlIiwiaW5pdGlhbGl6ZSIsIiQiLCJvbiIsImUiLCJpZCIsInRhcmdldCIsImNsb3Nlc3QiLCJhdHRyIiwid2luZG93IiwibG9jYXRpb24iLCJnbG9iYWxSb290VXJsIiwiRGF0YVRhYmxlIiwibGVuZ3RoQ2hhbmdlIiwicGFnaW5nIiwiY29sdW1ucyIsIm9yZGVyYWJsZSIsImF1dG9XaWR0aCIsIm9yZGVyIiwibGFuZ3VhZ2UiLCJTZW1hbnRpY0xvY2FsaXphdGlvbiIsImRhdGFUYWJsZUxvY2FsaXNhdGlvbiIsInNldHRpbmdzIiwicG9wdXAiLCJhcHBlbmRUbyIsInByZXZlbnREZWZhdWx0IiwiZGVsZXRlUnVsZSIsInJlbW92ZSIsImFwaSIsInVybCIsInN1Y2Nlc3NUZXN0IiwicmVzcG9uc2UiLCJ1bmRlZmluZWQiLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIiwib25TdWNjZXNzIiwic3VjY2VzcyIsImZpbmQiLCJVc2VyTWVzc2FnZSIsInNob3dFcnJvciIsIm1lc3NhZ2UiLCJlcnJvciIsImdsb2JhbFRyYW5zbGF0ZSIsImV4X0ltcG9zc2libGVUb0RlbGV0ZUV4dGVuc2lvbiIsImRvY3VtZW50IiwicmVhZHkiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUEsbUJBQW1CLEdBQUc7QUFFeEI7QUFDSjtBQUNBO0FBQ0lDLEVBQUFBLFVBTHdCLHdCQUtYO0FBRVQ7QUFDQUMsSUFBQUEsQ0FBQyxDQUFDLGVBQUQsQ0FBRCxDQUFtQkMsRUFBbkIsQ0FBc0IsVUFBdEIsRUFBa0MsVUFBQ0MsQ0FBRCxF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RCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBNaWtvUEJYIC0gZnJlZSBwaG9uZSBzeXN0ZW0gZm9yIHNtYWxsIGJ1c2luZXNzXG4gKiBDb3B5cmlnaHQgwqkgMjAxNy0yMDIzIEFsZXhleSBQb3J0bm92IGFuZCBOaWtvbGF5IEJla2V0b3ZcbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uXG4gKiBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICovXG5cbi8qIGdsb2JhbCBnbG9iYWxSb290VXJsLCQgKi9cblxuLyoqXG4gKiBPYmplY3QgZm9yIG1hbmFnaW5nIHRoZSBPdXQtb2YtV29yayBUaW1lcyB0YWJsZS5cbiAqXG4gKiBAbW9kdWxlIE91dE9mV29ya1RpbWVzVGFibGVcbiAqL1xuY29uc3QgT3V0T2ZXb3JrVGltZXNUYWJsZSA9IHtcblxuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemVzIHRoZSBPdXQtb2YtV29yayBUaW1lcyB0YWJsZS5cbiAgICAgKi9cbiAgICBpbml0aWFsaXplKCkge1xuXG4gICAgICAgIC8vIEJpbmQgZG91YmxlLWNsaWNrIGV2ZW50IHRvIHRhYmxlIGNlbGxzXG4gICAgICAgICQoJy5mcmFtZS1yb3cgdGQnKS5vbignZGJsY2xpY2snLCAoZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaWQgPSAkKGUudGFyZ2V0KS5jbG9zZXN0KCd0cicpLmF0dHIoJ2lkJyk7XG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSBgJHtnbG9iYWxSb290VXJsfW91dC1vZmYtd29yay10aW1lL21vZGlmeS8ke2lkfWA7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIEluaXRpYWxpemUgRGF0YVRhYmxlXG4gICAgICAgICQoJyN0aW1lLWZyYW1lcy10YWJsZScpLkRhdGFUYWJsZSh7XG4gICAgICAgICAgICBsZW5ndGhDaGFuZ2U6IGZhbHNlLFxuICAgICAgICAgICAgcGFnaW5nOiBmYWxzZSxcbiAgICAgICAgICAgIGNvbHVtbnM6IFtcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIHtvcmRlcmFibGU6IGZhbHNlfSxcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAge29yZGVyYWJsZTogZmFsc2V9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIGF1dG9XaWR0aDogZmFsc2UsXG4gICAgICAgICAgICBvcmRlcjogWzEsICdhc2MnXSxcbiAgICAgICAgICAgIGxhbmd1YWdlOiBTZW1hbnRpY0xvY2FsaXphdGlvbi5kYXRhVGFibGVMb2NhbGlzYXRpb24sXG4gICAgICAgICAgICBcImRyYXdDYWxsYmFja1wiOiBmdW5jdGlvbiAoc2V0dGluZ3MpIHtcbiAgICAgICAgICAgICAgICAkKFwiW2RhdGEtY29udGVudCE9JyddW2RhdGEtY29udGVudF1cIikucG9wdXAoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gTW92ZSB0aGUgXCJBZGQgTmV3XCIgYnV0dG9uIHRvIHRoZSBmaXJzdCBlaWdodC1jb2x1bW4gZGl2XG4gICAgICAgICQoJyNhZGQtbmV3LWJ1dHRvbicpLmFwcGVuZFRvKCQoJ2Rpdi5laWdodC5jb2x1bW46ZXEoMCknKSk7XG5cbiAgICAgICAgJCgnYm9keScpLm9uKCdjbGljaycsICdhLmRlbGV0ZScsIChlKSA9PiB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBjb25zdCBpZCA9ICQoZS50YXJnZXQpLmNsb3Nlc3QoJ3RyJykuYXR0cignaWQnKTtcbiAgICAgICAgICAgIE91dE9mV29ya1RpbWVzVGFibGUuZGVsZXRlUnVsZShpZCk7XG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogRGVsZXRlcyBhbiBleHRlbnNpb24gd2l0aCB0aGUgZ2l2ZW4gSUQuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGlkIC0gVGhlIElEIG9mIHRoZSBydWxlIHRvIGRlbGV0ZS5cbiAgICAgKi9cbiAgICBkZWxldGVSdWxlKGlkKSB7XG4gICAgICAgICQoJy5tZXNzYWdlLmFqYXgnKS5yZW1vdmUoKTtcbiAgICAgICAgJC5hcGkoe1xuICAgICAgICAgICAgdXJsOiBgJHtnbG9iYWxSb290VXJsfW91dC1vZmYtd29yay10aW1lL2RlbGV0ZS8ke2lkfWAsXG4gICAgICAgICAgICBvbjogJ25vdycsXG4gICAgICAgICAgICBzdWNjZXNzVGVzdChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIC8vIHRlc3Qgd2hldGhlciBhIEpTT04gcmVzcG9uc2UgaXMgdmFsaWRcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICAmJiBPYmplY3Qua2V5cyhyZXNwb25zZSkubGVuZ3RoID4gMDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvblN1Y2Nlc3MocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3VjY2VzcyA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAkKCcjdGltZS1mcmFtZXMtdGFibGUnKS5maW5kKGB0cltpZD0ke2lkfV1gKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBVc2VyTWVzc2FnZS5zaG93RXJyb3IocmVzcG9uc2UubWVzc2FnZS5lcnJvciwgZ2xvYmFsVHJhbnNsYXRlLmV4X0ltcG9zc2libGVUb0RlbGV0ZUV4dGVuc2lvbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfSxcbn07XG5cbi8qKlxuICogIEluaXRpYWxpemUgb3V0IG9mIHdvcmsgdGFibGUgb24gZG9jdW1lbnQgcmVhZHlcbiAqL1xuJChkb2N1bWVudCkucmVhZHkoKCkgPT4ge1xuICAgIE91dE9mV29ya1RpbWVzVGFibGUuaW5pdGlhbGl6ZSgpO1xufSk7XG5cbiJdfQ==