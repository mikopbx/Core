"use strict";

/*
 * MikoPBX - free phone system for small business
 * Copyright Â© 2017-2023 Alexey Portnov and Nikolay Beketov
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

/* global globalRootUrl, SemanticLocalization */

/**
 * The DialplanApplicationsTable object.
 * Manages the operations and behaviors of the Dialplan applications table in the UI.
 *
 * @module DialplanApplicationsTable
 */
var DialplanApplicationsTable = {
  /**
   * Initializes the Dialplan Applications Table.
   * Sets up the data table, moves the "Add New" button, and adds a double click event handler to table rows.
   */
  initialize: function initialize() {
    $('#custom-applications-table').DataTable({
      lengthChange: false,
      paging: false,
      columns: [null, null, {
        orderable: false,
        searchable: false
      }, {
        orderable: false,
        searchable: false
      }],
      order: [0, 'asc'],
      language: SemanticLocalization.dataTableLocalisation
    }); // Move the "Add New" button to the first eight-column div

    $('#add-new-button').appendTo($('div.eight.column:eq(0)')); // Attach double click event handler to table rows

    $('.app-row td').on('dblclick', function (e) {
      // On double click, navigate to the modification page of the clicked application
      var id = $(e.target).closest('tr').attr('id');
      window.location = "".concat(globalRootUrl, "dialplan-applications/modify/").concat(id);
    });
  }
}; // Initialize the Dialplan Applications table when the document is ready

$(document).ready(function () {
  DialplanApplicationsTable.initialize();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9EaWFscGxhbkFwcGxpY2F0aW9ucy9kaWFscGxhbi1hcHBsaWNhdGlvbnMtaW5kZXguanMiXSwibmFtZXMiOlsiRGlhbHBsYW5BcHBsaWNhdGlvbnNUYWJsZSIsImluaXRpYWxpemUiLCIkIiwiRGF0YVRhYmxlIiwibGVuZ3RoQ2hhbmdlIiwicGFnaW5nIiwiY29sdW1ucyIsIm9yZGVyYWJsZSIsInNlYXJjaGFibGUiLCJvcmRlciIsImxhbmd1YWdlIiwiU2VtYW50aWNMb2NhbGl6YXRpb24iLCJkYXRhVGFibGVMb2NhbGlzYXRpb24iLCJhcHBlbmRUbyIsIm9uIiwiZSIsImlkIiwidGFyZ2V0IiwiY2xvc2VzdCIsImF0dHIiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImdsb2JhbFJvb3RVcmwiLCJkb2N1bWVudCIsInJlYWR5Il0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUEseUJBQXlCLEdBQUc7QUFFOUI7QUFDSjtBQUNBO0FBQ0E7QUFDSUMsRUFBQUEsVUFOOEIsd0JBTWpCO0FBQ1RDLElBQUFBLENBQUMsQ0FBQyw0QkFBRCxDQUFELENBQWdDQyxTQUFoQyxDQUEwQztBQUN0Q0MsTUFBQUEsWUFBWSxFQUFFLEtBRHdCO0FBRXRDQyxNQUFBQSxNQUFNLEVBQUUsS0FGOEI7QUFHdENDLE1BQUFBLE9BQU8sRUFBRSxDQUNMLElBREssRUFFTCxJQUZLLEVBR0w7QUFBQ0MsUUFBQUEsU0FBUyxFQUFFLEtBQVo7QUFBbUJDLFFBQUFBLFVBQVUsRUFBRTtBQUEvQixPQUhLLEVBSUw7QUFBQ0QsUUFBQUEsU0FBUyxFQUFFLEtBQVo7QUFBbUJDLFFBQUFBLFVBQVUsRUFBRTtBQUEvQixPQUpLLENBSDZCO0FBU3RDQyxNQUFBQSxLQUFLLEVBQUUsQ0FBQyxDQUFELEVBQUksS0FBSixDQVQrQjtBQVV0Q0MsTUFBQUEsUUFBUSxFQUFFQyxvQkFBb0IsQ0FBQ0M7QUFWTyxLQUExQyxFQURTLENBY1Q7O0FBQ0FWLElBQUFBLENBQUMsQ0FBQyxpQkFBRCxDQUFELENBQXFCVyxRQUFyQixDQUE4QlgsQ0FBQyxDQUFDLHdCQUFELENBQS9CLEVBZlMsQ0FpQlQ7O0FBQ0FBLElBQUFBLENBQUMsQ0FBQyxhQUFELENBQUQsQ0FBaUJZLEVBQWpCLENBQW9CLFVBQXBCLEVBQWdDLFVBQUNDLENBQUQsRUFBTztBQUNuQztBQUNBLFVBQU1DLEVBQUUsR0FBR2QsQ0FBQyxDQUFDYSxDQUFDLENBQUNFLE1BQUgsQ0FBRCxDQUFZQyxPQUFaLENBQW9CLElBQXBCLEVBQTBCQyxJQUExQixDQUErQixJQUEvQixDQUFYO0FBQ0FDLE1BQUFBLE1BQU0sQ0FBQ0MsUUFBUCxhQUFxQkMsYUFBckIsMENBQWtFTixFQUFsRTtBQUNILEtBSkQ7QUFLSDtBQTdCNkIsQ0FBbEMsQyxDQWlDQTs7QUFDQWQsQ0FBQyxDQUFDcUIsUUFBRCxDQUFELENBQVlDLEtBQVosQ0FBa0IsWUFBTTtBQUNwQnhCLEVBQUFBLHlCQUF5QixDQUFDQyxVQUExQjtBQUNILENBRkQiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogTWlrb1BCWCAtIGZyZWUgcGhvbmUgc3lzdGVtIGZvciBzbWFsbCBidXNpbmVzc1xuICogQ29weXJpZ2h0IMKpIDIwMTctMjAyMyBBbGV4ZXkgUG9ydG5vdiBhbmQgTmlrb2xheSBCZWtldG92XG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLlxuICogSWYgbm90LCBzZWUgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqL1xuXG4vKiBnbG9iYWwgZ2xvYmFsUm9vdFVybCwgU2VtYW50aWNMb2NhbGl6YXRpb24gKi9cblxuLyoqXG4gKiBUaGUgRGlhbHBsYW5BcHBsaWNhdGlvbnNUYWJsZSBvYmplY3QuXG4gKiBNYW5hZ2VzIHRoZSBvcGVyYXRpb25zIGFuZCBiZWhhdmlvcnMgb2YgdGhlIERpYWxwbGFuIGFwcGxpY2F0aW9ucyB0YWJsZSBpbiB0aGUgVUkuXG4gKlxuICogQG1vZHVsZSBEaWFscGxhbkFwcGxpY2F0aW9uc1RhYmxlXG4gKi9cbmNvbnN0IERpYWxwbGFuQXBwbGljYXRpb25zVGFibGUgPSB7XG5cbiAgICAvKipcbiAgICAgKiBJbml0aWFsaXplcyB0aGUgRGlhbHBsYW4gQXBwbGljYXRpb25zIFRhYmxlLlxuICAgICAqIFNldHMgdXAgdGhlIGRhdGEgdGFibGUsIG1vdmVzIHRoZSBcIkFkZCBOZXdcIiBidXR0b24sIGFuZCBhZGRzIGEgZG91YmxlIGNsaWNrIGV2ZW50IGhhbmRsZXIgdG8gdGFibGUgcm93cy5cbiAgICAgKi9cbiAgICBpbml0aWFsaXplKCkge1xuICAgICAgICAkKCcjY3VzdG9tLWFwcGxpY2F0aW9ucy10YWJsZScpLkRhdGFUYWJsZSh7XG4gICAgICAgICAgICBsZW5ndGhDaGFuZ2U6IGZhbHNlLFxuICAgICAgICAgICAgcGFnaW5nOiBmYWxzZSxcbiAgICAgICAgICAgIGNvbHVtbnM6IFtcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAge29yZGVyYWJsZTogZmFsc2UsIHNlYXJjaGFibGU6IGZhbHNlfSxcbiAgICAgICAgICAgICAgICB7b3JkZXJhYmxlOiBmYWxzZSwgc2VhcmNoYWJsZTogZmFsc2V9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIG9yZGVyOiBbMCwgJ2FzYyddLFxuICAgICAgICAgICAgbGFuZ3VhZ2U6IFNlbWFudGljTG9jYWxpemF0aW9uLmRhdGFUYWJsZUxvY2FsaXNhdGlvbixcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gTW92ZSB0aGUgXCJBZGQgTmV3XCIgYnV0dG9uIHRvIHRoZSBmaXJzdCBlaWdodC1jb2x1bW4gZGl2XG4gICAgICAgICQoJyNhZGQtbmV3LWJ1dHRvbicpLmFwcGVuZFRvKCQoJ2Rpdi5laWdodC5jb2x1bW46ZXEoMCknKSk7XG5cbiAgICAgICAgLy8gQXR0YWNoIGRvdWJsZSBjbGljayBldmVudCBoYW5kbGVyIHRvIHRhYmxlIHJvd3NcbiAgICAgICAgJCgnLmFwcC1yb3cgdGQnKS5vbignZGJsY2xpY2snLCAoZSkgPT4ge1xuICAgICAgICAgICAgLy8gT24gZG91YmxlIGNsaWNrLCBuYXZpZ2F0ZSB0byB0aGUgbW9kaWZpY2F0aW9uIHBhZ2Ugb2YgdGhlIGNsaWNrZWQgYXBwbGljYXRpb25cbiAgICAgICAgICAgIGNvbnN0IGlkID0gJChlLnRhcmdldCkuY2xvc2VzdCgndHInKS5hdHRyKCdpZCcpO1xuICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uID0gYCR7Z2xvYmFsUm9vdFVybH1kaWFscGxhbi1hcHBsaWNhdGlvbnMvbW9kaWZ5LyR7aWR9YDtcbiAgICAgICAgfSk7XG4gICAgfSxcblxufTtcblxuLy8gSW5pdGlhbGl6ZSB0aGUgRGlhbHBsYW4gQXBwbGljYXRpb25zIHRhYmxlIHdoZW4gdGhlIGRvY3VtZW50IGlzIHJlYWR5XG4kKGRvY3VtZW50KS5yZWFkeSgoKSA9PiB7XG4gICAgRGlhbHBsYW5BcHBsaWNhdGlvbnNUYWJsZS5pbml0aWFsaXplKCk7XG59KTtcblxuIl19