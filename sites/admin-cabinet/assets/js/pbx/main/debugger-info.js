"use strict";

/*
 * MikoPBX - free phone system for small business
 * Copyright Â© 2017-2023 Alexey Portnov and Nikolay Beketov
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

/**
 * The DebuggerInfo object is responsible for showing extra information by double ESC key press
 *
 * @module DebuggerInfo
 */
var DebuggerInfo = {
  $debugInfoDiv: $('#debug-info'),
  delta: 500,
  lastKeypressTime: 0,

  /**
   * Initializes the debugger info.
   */
  initialize: function initialize() {
    // Add CSS class to the debug info div
    DebuggerInfo.$debugInfoDiv.addClass('ui right very wide sidebar'); // Attach keydown event handler to the document

    window.$(document).on('keydown', function (event) {
      DebuggerInfo.keyHandler(event);
    });
  },

  /**
   * Updates the content of the debug info.
   * @param {string} newContent - The new content for the debug info.
   */
  UpdateContent: function UpdateContent(newContent) {
    DebuggerInfo.$debugInfoDiv.html(newContent);
  },

  /**
   * Shows the sidebar with the debug info.
   */
  showSidebar: function showSidebar() {
    // Check if debug info is available
    if (DebuggerInfo.$debugInfoDiv.html().length === 0) return; // Toggle the sidebar to show/hide

    DebuggerInfo.$debugInfoDiv.sidebar({
      transition: 'overlay',
      dimPage: false
    }).sidebar('toggle');
  },

  /**
   * Handles key events for the debugger info.
   * @param {Event} event - The keydown event.
   */
  keyHandler: function keyHandler(event) {
    // Double press of ESC key will show the debug information
    if (event.keyCode === 27) {
      var thisKeypressTime = new Date();

      if (thisKeypressTime - DebuggerInfo.lastKeypressTime <= DebuggerInfo.delta) {
        // Show the sidebar with debug info
        DebuggerInfo.showSidebar();
        thisKeypressTime = 0;
      } // Update the last keypress time


      DebuggerInfo.lastKeypressTime = thisKeypressTime;
    }
  }
}; // export default DebuggerInfo;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYWluL2RlYnVnZ2VyLWluZm8uanMiXSwibmFtZXMiOlsiRGVidWdnZXJJbmZvIiwiJGRlYnVnSW5mb0RpdiIsIiQiLCJkZWx0YSIsImxhc3RLZXlwcmVzc1RpbWUiLCJpbml0aWFsaXplIiwiYWRkQ2xhc3MiLCJ3aW5kb3ciLCJkb2N1bWVudCIsIm9uIiwiZXZlbnQiLCJrZXlIYW5kbGVyIiwiVXBkYXRlQ29udGVudCIsIm5ld0NvbnRlbnQiLCJodG1sIiwic2hvd1NpZGViYXIiLCJsZW5ndGgiLCJzaWRlYmFyIiwidHJhbnNpdGlvbiIsImRpbVBhZ2UiLCJrZXlDb2RlIiwidGhpc0tleXByZXNzVGltZSIsIkRhdGUiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUEsWUFBWSxHQUFHO0FBQ2pCQyxFQUFBQSxhQUFhLEVBQUVDLENBQUMsQ0FBQyxhQUFELENBREM7QUFFakJDLEVBQUFBLEtBQUssRUFBRSxHQUZVO0FBR2pCQyxFQUFBQSxnQkFBZ0IsRUFBRSxDQUhEOztBQUtqQjtBQUNKO0FBQ0E7QUFDSUMsRUFBQUEsVUFSaUIsd0JBUUo7QUFFVDtBQUNBTCxJQUFBQSxZQUFZLENBQUNDLGFBQWIsQ0FBMkJLLFFBQTNCLENBQW9DLDRCQUFwQyxFQUhTLENBS1Q7O0FBQ0FDLElBQUFBLE1BQU0sQ0FBQ0wsQ0FBUCxDQUFTTSxRQUFULEVBQW1CQyxFQUFuQixDQUFzQixTQUF0QixFQUFpQyxVQUFDQyxLQUFELEVBQVc7QUFDeENWLE1BQUFBLFlBQVksQ0FBQ1csVUFBYixDQUF3QkQsS0FBeEI7QUFDSCxLQUZEO0FBR0gsR0FqQmdCOztBQW1CakI7QUFDSjtBQUNBO0FBQ0E7QUFDSUUsRUFBQUEsYUF2QmlCLHlCQXVCSEMsVUF2QkcsRUF1QlM7QUFDdEJiLElBQUFBLFlBQVksQ0FBQ0MsYUFBYixDQUEyQmEsSUFBM0IsQ0FBZ0NELFVBQWhDO0FBQ0gsR0F6QmdCOztBQTJCakI7QUFDSjtBQUNBO0FBQ0lFLEVBQUFBLFdBOUJpQix5QkE4Qkg7QUFDVjtBQUNBLFFBQUlmLFlBQVksQ0FBQ0MsYUFBYixDQUEyQmEsSUFBM0IsR0FBa0NFLE1BQWxDLEtBQTZDLENBQWpELEVBQW9ELE9BRjFDLENBSVY7O0FBQ0FoQixJQUFBQSxZQUFZLENBQUNDLGFBQWIsQ0FDS2dCLE9BREwsQ0FDYTtBQUNMQyxNQUFBQSxVQUFVLEVBQUUsU0FEUDtBQUVMQyxNQUFBQSxPQUFPLEVBQUU7QUFGSixLQURiLEVBS0tGLE9BTEwsQ0FLYSxRQUxiO0FBTUgsR0F6Q2dCOztBQTJDakI7QUFDSjtBQUNBO0FBQ0E7QUFDSU4sRUFBQUEsVUEvQ2lCLHNCQStDTkQsS0EvQ00sRUErQ0M7QUFDZDtBQUNBLFFBQUlBLEtBQUssQ0FBQ1UsT0FBTixLQUFrQixFQUF0QixFQUEwQjtBQUN0QixVQUFJQyxnQkFBZ0IsR0FBRyxJQUFJQyxJQUFKLEVBQXZCOztBQUNBLFVBQUlELGdCQUFnQixHQUFHckIsWUFBWSxDQUFDSSxnQkFBaEMsSUFBb0RKLFlBQVksQ0FBQ0csS0FBckUsRUFBNEU7QUFDeEU7QUFDQUgsUUFBQUEsWUFBWSxDQUFDZSxXQUFiO0FBQ0FNLFFBQUFBLGdCQUFnQixHQUFHLENBQW5CO0FBQ0gsT0FOcUIsQ0FPdEI7OztBQUNBckIsTUFBQUEsWUFBWSxDQUFDSSxnQkFBYixHQUFnQ2lCLGdCQUFoQztBQUNIO0FBQ0o7QUEzRGdCLENBQXJCLEMsQ0ErREEiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogTWlrb1BCWCAtIGZyZWUgcGhvbmUgc3lzdGVtIGZvciBzbWFsbCBidXNpbmVzc1xuICogQ29weXJpZ2h0IMKpIDIwMTctMjAyMyBBbGV4ZXkgUG9ydG5vdiBhbmQgTmlrb2xheSBCZWtldG92XG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLlxuICogSWYgbm90LCBzZWUgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqL1xuXG4vKipcbiAqIFRoZSBEZWJ1Z2dlckluZm8gb2JqZWN0IGlzIHJlc3BvbnNpYmxlIGZvciBzaG93aW5nIGV4dHJhIGluZm9ybWF0aW9uIGJ5IGRvdWJsZSBFU0Mga2V5IHByZXNzXG4gKlxuICogQG1vZHVsZSBEZWJ1Z2dlckluZm9cbiAqL1xuY29uc3QgRGVidWdnZXJJbmZvID0ge1xuICAgICRkZWJ1Z0luZm9EaXY6ICQoJyNkZWJ1Zy1pbmZvJyksXG4gICAgZGVsdGE6IDUwMCxcbiAgICBsYXN0S2V5cHJlc3NUaW1lOiAwLFxuXG4gICAgLyoqXG4gICAgICogSW5pdGlhbGl6ZXMgdGhlIGRlYnVnZ2VyIGluZm8uXG4gICAgICovXG4gICAgaW5pdGlhbGl6ZSgpIHtcblxuICAgICAgICAvLyBBZGQgQ1NTIGNsYXNzIHRvIHRoZSBkZWJ1ZyBpbmZvIGRpdlxuICAgICAgICBEZWJ1Z2dlckluZm8uJGRlYnVnSW5mb0Rpdi5hZGRDbGFzcygndWkgcmlnaHQgdmVyeSB3aWRlIHNpZGViYXInKTtcblxuICAgICAgICAvLyBBdHRhY2gga2V5ZG93biBldmVudCBoYW5kbGVyIHRvIHRoZSBkb2N1bWVudFxuICAgICAgICB3aW5kb3cuJChkb2N1bWVudCkub24oJ2tleWRvd24nLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIERlYnVnZ2VySW5mby5rZXlIYW5kbGVyKGV2ZW50KTtcbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFVwZGF0ZXMgdGhlIGNvbnRlbnQgb2YgdGhlIGRlYnVnIGluZm8uXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG5ld0NvbnRlbnQgLSBUaGUgbmV3IGNvbnRlbnQgZm9yIHRoZSBkZWJ1ZyBpbmZvLlxuICAgICAqL1xuICAgIFVwZGF0ZUNvbnRlbnQobmV3Q29udGVudCkge1xuICAgICAgICBEZWJ1Z2dlckluZm8uJGRlYnVnSW5mb0Rpdi5odG1sKG5ld0NvbnRlbnQpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBTaG93cyB0aGUgc2lkZWJhciB3aXRoIHRoZSBkZWJ1ZyBpbmZvLlxuICAgICAqL1xuICAgIHNob3dTaWRlYmFyKCkge1xuICAgICAgICAvLyBDaGVjayBpZiBkZWJ1ZyBpbmZvIGlzIGF2YWlsYWJsZVxuICAgICAgICBpZiAoRGVidWdnZXJJbmZvLiRkZWJ1Z0luZm9EaXYuaHRtbCgpLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuXG4gICAgICAgIC8vIFRvZ2dsZSB0aGUgc2lkZWJhciB0byBzaG93L2hpZGVcbiAgICAgICAgRGVidWdnZXJJbmZvLiRkZWJ1Z0luZm9EaXZcbiAgICAgICAgICAgIC5zaWRlYmFyKHtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiAnb3ZlcmxheScsXG4gICAgICAgICAgICAgICAgZGltUGFnZTogZmFsc2UsXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnNpZGViYXIoJ3RvZ2dsZScpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBIYW5kbGVzIGtleSBldmVudHMgZm9yIHRoZSBkZWJ1Z2dlciBpbmZvLlxuICAgICAqIEBwYXJhbSB7RXZlbnR9IGV2ZW50IC0gVGhlIGtleWRvd24gZXZlbnQuXG4gICAgICovXG4gICAga2V5SGFuZGxlcihldmVudCkge1xuICAgICAgICAvLyBEb3VibGUgcHJlc3Mgb2YgRVNDIGtleSB3aWxsIHNob3cgdGhlIGRlYnVnIGluZm9ybWF0aW9uXG4gICAgICAgIGlmIChldmVudC5rZXlDb2RlID09PSAyNykge1xuICAgICAgICAgICAgbGV0IHRoaXNLZXlwcmVzc1RpbWUgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgaWYgKHRoaXNLZXlwcmVzc1RpbWUgLSBEZWJ1Z2dlckluZm8ubGFzdEtleXByZXNzVGltZSA8PSBEZWJ1Z2dlckluZm8uZGVsdGEpIHtcbiAgICAgICAgICAgICAgICAvLyBTaG93IHRoZSBzaWRlYmFyIHdpdGggZGVidWcgaW5mb1xuICAgICAgICAgICAgICAgIERlYnVnZ2VySW5mby5zaG93U2lkZWJhcigpO1xuICAgICAgICAgICAgICAgIHRoaXNLZXlwcmVzc1RpbWUgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSBsYXN0IGtleXByZXNzIHRpbWVcbiAgICAgICAgICAgIERlYnVnZ2VySW5mby5sYXN0S2V5cHJlc3NUaW1lID0gdGhpc0tleXByZXNzVGltZTtcbiAgICAgICAgfVxuICAgIH0sXG59O1xuXG5cbi8vIGV4cG9ydCBkZWZhdWx0IERlYnVnZ2VySW5mbzsiXX0=