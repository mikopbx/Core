"use strict";

/*
 * MikoPBX - free phone system for small business
 * Copyright (C) 2017-2020 Alexey Portnov and Nikolay Beketov
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

/* global PbxApi, globalDebugMode */
var connectionCheckWorker = {
  timeOut: 1000,
  timeOutHandle: '',
  errorCounts: 0,
  $connectionDimmer: $('#connection-dimmer'),
  initialize: function () {
    function initialize() {
      // Запустим обновление статуса провайдера
      connectionCheckWorker.restartWorker();
    }

    return initialize;
  }(),
  restartWorker: function () {
    function restartWorker() {
      window.clearTimeout(connectionCheckWorker.timeoutHandle);
      connectionCheckWorker.worker();
    }

    return restartWorker;
  }(),
  worker: function () {
    function worker() {
      PbxApi.PingPBX(connectionCheckWorker.cbAfterResponse);
      connectionCheckWorker.timeoutHandle = window.setTimeout(connectionCheckWorker.worker, connectionCheckWorker.timeOut);
    }

    return worker;
  }(),
  cbAfterResponse: function () {
    function cbAfterResponse(result) {
      if (result === true) {
        connectionCheckWorker.$connectionDimmer.dimmer('hide');
        connectionCheckWorker.timeOut = 3000;
        if (connectionCheckWorker.errorCounts > 5) window.location.reload();
        connectionCheckWorker.errorCounts = 0;
      } else if (connectionCheckWorker.errorCounts > 3) {
        connectionCheckWorker.$connectionDimmer.dimmer('show');
        connectionCheckWorker.timeOut = 1000;
        connectionCheckWorker.errorCounts += 1;
      } else {
        connectionCheckWorker.timeOut = 1000;
        connectionCheckWorker.errorCounts += 1;
      }
    }

    return cbAfterResponse;
  }()
};
$(document).ready(function () {
  if (!globalDebugMode) {
    connectionCheckWorker.initialize();
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYWluL2Nvbm5lY3Rpb24tY2hlY2std29ya2VyLmpzIl0sIm5hbWVzIjpbImNvbm5lY3Rpb25DaGVja1dvcmtlciIsInRpbWVPdXQiLCJ0aW1lT3V0SGFuZGxlIiwiZXJyb3JDb3VudHMiLCIkY29ubmVjdGlvbkRpbW1lciIsIiQiLCJpbml0aWFsaXplIiwicmVzdGFydFdvcmtlciIsIndpbmRvdyIsImNsZWFyVGltZW91dCIsInRpbWVvdXRIYW5kbGUiLCJ3b3JrZXIiLCJQYnhBcGkiLCJQaW5nUEJYIiwiY2JBZnRlclJlc3BvbnNlIiwic2V0VGltZW91dCIsInJlc3VsdCIsImRpbW1lciIsImxvY2F0aW9uIiwicmVsb2FkIiwiZG9jdW1lbnQiLCJyZWFkeSIsImdsb2JhbERlYnVnTW9kZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBO0FBRUEsSUFBTUEscUJBQXFCLEdBQUc7QUFDN0JDLEVBQUFBLE9BQU8sRUFBRSxJQURvQjtBQUU3QkMsRUFBQUEsYUFBYSxFQUFFLEVBRmM7QUFHN0JDLEVBQUFBLFdBQVcsRUFBRSxDQUhnQjtBQUk3QkMsRUFBQUEsaUJBQWlCLEVBQUVDLENBQUMsQ0FBQyxvQkFBRCxDQUpTO0FBSzdCQyxFQUFBQSxVQUw2QjtBQUFBLDBCQUtoQjtBQUNaO0FBQ0FOLE1BQUFBLHFCQUFxQixDQUFDTyxhQUF0QjtBQUNBOztBQVI0QjtBQUFBO0FBUzdCQSxFQUFBQSxhQVQ2QjtBQUFBLDZCQVNiO0FBQ2ZDLE1BQUFBLE1BQU0sQ0FBQ0MsWUFBUCxDQUFvQlQscUJBQXFCLENBQUNVLGFBQTFDO0FBQ0FWLE1BQUFBLHFCQUFxQixDQUFDVyxNQUF0QjtBQUNBOztBQVo0QjtBQUFBO0FBYTdCQSxFQUFBQSxNQWI2QjtBQUFBLHNCQWFwQjtBQUNSQyxNQUFBQSxNQUFNLENBQUNDLE9BQVAsQ0FBZWIscUJBQXFCLENBQUNjLGVBQXJDO0FBQ0FkLE1BQUFBLHFCQUFxQixDQUFDVSxhQUF0QixHQUFzQ0YsTUFBTSxDQUFDTyxVQUFQLENBQ3JDZixxQkFBcUIsQ0FBQ1csTUFEZSxFQUVyQ1gscUJBQXFCLENBQUNDLE9BRmUsQ0FBdEM7QUFJQTs7QUFuQjRCO0FBQUE7QUFvQjdCYSxFQUFBQSxlQXBCNkI7QUFBQSw2QkFvQmJFLE1BcEJhLEVBb0JMO0FBQ3ZCLFVBQUlBLE1BQU0sS0FBSyxJQUFmLEVBQXFCO0FBQ3BCaEIsUUFBQUEscUJBQXFCLENBQUNJLGlCQUF0QixDQUF3Q2EsTUFBeEMsQ0FBK0MsTUFBL0M7QUFDQWpCLFFBQUFBLHFCQUFxQixDQUFDQyxPQUF0QixHQUFnQyxJQUFoQztBQUNBLFlBQUlELHFCQUFxQixDQUFDRyxXQUF0QixHQUFvQyxDQUF4QyxFQUEyQ0ssTUFBTSxDQUFDVSxRQUFQLENBQWdCQyxNQUFoQjtBQUMzQ25CLFFBQUFBLHFCQUFxQixDQUFDRyxXQUF0QixHQUFvQyxDQUFwQztBQUNBLE9BTEQsTUFLTyxJQUFJSCxxQkFBcUIsQ0FBQ0csV0FBdEIsR0FBb0MsQ0FBeEMsRUFBMkM7QUFDakRILFFBQUFBLHFCQUFxQixDQUFDSSxpQkFBdEIsQ0FBd0NhLE1BQXhDLENBQStDLE1BQS9DO0FBQ0FqQixRQUFBQSxxQkFBcUIsQ0FBQ0MsT0FBdEIsR0FBZ0MsSUFBaEM7QUFDQUQsUUFBQUEscUJBQXFCLENBQUNHLFdBQXRCLElBQXFDLENBQXJDO0FBQ0EsT0FKTSxNQUlBO0FBQ05ILFFBQUFBLHFCQUFxQixDQUFDQyxPQUF0QixHQUFnQyxJQUFoQztBQUNBRCxRQUFBQSxxQkFBcUIsQ0FBQ0csV0FBdEIsSUFBcUMsQ0FBckM7QUFDQTtBQUNEOztBQWxDNEI7QUFBQTtBQUFBLENBQTlCO0FBcUNBRSxDQUFDLENBQUNlLFFBQUQsQ0FBRCxDQUFZQyxLQUFaLENBQWtCLFlBQU07QUFDdkIsTUFBSSxDQUFDQyxlQUFMLEVBQXNCO0FBQ3JCdEIsSUFBQUEscUJBQXFCLENBQUNNLFVBQXRCO0FBQ0E7QUFDRCxDQUpEIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIE1pa29QQlggLSBmcmVlIHBob25lIHN5c3RlbSBmb3Igc21hbGwgYnVzaW5lc3NcbiAqIENvcHlyaWdodCAoQykgMjAxNy0yMDIwIEFsZXhleSBQb3J0bm92IGFuZCBOaWtvbGF5IEJla2V0b3ZcbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uXG4gKiBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICovXG5cbi8qIGdsb2JhbCBQYnhBcGksIGdsb2JhbERlYnVnTW9kZSAqL1xuXG5jb25zdCBjb25uZWN0aW9uQ2hlY2tXb3JrZXIgPSB7XG5cdHRpbWVPdXQ6IDEwMDAsXG5cdHRpbWVPdXRIYW5kbGU6ICcnLFxuXHRlcnJvckNvdW50czogMCxcblx0JGNvbm5lY3Rpb25EaW1tZXI6ICQoJyNjb25uZWN0aW9uLWRpbW1lcicpLFxuXHRpbml0aWFsaXplKCkge1xuXHRcdC8vINCX0LDQv9GD0YHRgtC40Lwg0L7QsdC90L7QstC70LXQvdC40LUg0YHRgtCw0YLRg9GB0LAg0L/RgNC+0LLQsNC50LTQtdGA0LBcblx0XHRjb25uZWN0aW9uQ2hlY2tXb3JrZXIucmVzdGFydFdvcmtlcigpO1xuXHR9LFxuXHRyZXN0YXJ0V29ya2VyKCkge1xuXHRcdHdpbmRvdy5jbGVhclRpbWVvdXQoY29ubmVjdGlvbkNoZWNrV29ya2VyLnRpbWVvdXRIYW5kbGUpO1xuXHRcdGNvbm5lY3Rpb25DaGVja1dvcmtlci53b3JrZXIoKTtcblx0fSxcblx0d29ya2VyKCkge1xuXHRcdFBieEFwaS5QaW5nUEJYKGNvbm5lY3Rpb25DaGVja1dvcmtlci5jYkFmdGVyUmVzcG9uc2UpO1xuXHRcdGNvbm5lY3Rpb25DaGVja1dvcmtlci50aW1lb3V0SGFuZGxlID0gd2luZG93LnNldFRpbWVvdXQoXG5cdFx0XHRjb25uZWN0aW9uQ2hlY2tXb3JrZXIud29ya2VyLFxuXHRcdFx0Y29ubmVjdGlvbkNoZWNrV29ya2VyLnRpbWVPdXQsXG5cdFx0KTtcblx0fSxcblx0Y2JBZnRlclJlc3BvbnNlKHJlc3VsdCkge1xuXHRcdGlmIChyZXN1bHQgPT09IHRydWUpIHtcblx0XHRcdGNvbm5lY3Rpb25DaGVja1dvcmtlci4kY29ubmVjdGlvbkRpbW1lci5kaW1tZXIoJ2hpZGUnKTtcblx0XHRcdGNvbm5lY3Rpb25DaGVja1dvcmtlci50aW1lT3V0ID0gMzAwMDtcblx0XHRcdGlmIChjb25uZWN0aW9uQ2hlY2tXb3JrZXIuZXJyb3JDb3VudHMgPiA1KSB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG5cdFx0XHRjb25uZWN0aW9uQ2hlY2tXb3JrZXIuZXJyb3JDb3VudHMgPSAwO1xuXHRcdH0gZWxzZSBpZiAoY29ubmVjdGlvbkNoZWNrV29ya2VyLmVycm9yQ291bnRzID4gMykge1xuXHRcdFx0Y29ubmVjdGlvbkNoZWNrV29ya2VyLiRjb25uZWN0aW9uRGltbWVyLmRpbW1lcignc2hvdycpO1xuXHRcdFx0Y29ubmVjdGlvbkNoZWNrV29ya2VyLnRpbWVPdXQgPSAxMDAwO1xuXHRcdFx0Y29ubmVjdGlvbkNoZWNrV29ya2VyLmVycm9yQ291bnRzICs9IDE7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNvbm5lY3Rpb25DaGVja1dvcmtlci50aW1lT3V0ID0gMTAwMDtcblx0XHRcdGNvbm5lY3Rpb25DaGVja1dvcmtlci5lcnJvckNvdW50cyArPSAxO1xuXHRcdH1cblx0fSxcbn07XG5cbiQoZG9jdW1lbnQpLnJlYWR5KCgpID0+IHtcblx0aWYgKCFnbG9iYWxEZWJ1Z01vZGUpIHtcblx0XHRjb25uZWN0aW9uQ2hlY2tXb3JrZXIuaW5pdGlhbGl6ZSgpO1xuXHR9XG59KTtcbiJdfQ==