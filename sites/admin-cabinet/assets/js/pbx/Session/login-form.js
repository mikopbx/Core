"use strict";

/*
 * MikoPBX - free phone system for small business
 * Copyright (C) 2017-2020 Alexey Portnov and Nikolay Beketov
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

/* global globalRootUrl,globalTranslate,Form */
var loginForm = {
  $formObj: $('#login-form'),
  $submitButton: $('#submitbutton'),
  $checkBoxes: $('.checkbox'),
  validateRules: {
    login: {
      identifier: 'login',
      rules: [{
        type: 'empty',
        prompt: globalTranslate.auth_ValidateLoginNotEmpty
      }]
    },
    password: {
      identifier: 'password',
      rules: [{
        type: 'empty',
        prompt: globalTranslate.auth_ValidatePasswordNotEmpty
      }]
    }
  },
  initialize: function initialize() {
    loginForm.initializeForm();
    $('input').keyup(function (event) {
      if (event.keyCode === 13) {
        loginForm.$submitButton.click();
      }
    }).on('input', function () {
      $('.message.ajax').remove();
    });
    loginForm.$checkBoxes.checkbox();
  },
  cbBeforeSendForm: function cbBeforeSendForm(settings) {
    var result = settings;
    result.data = loginForm.$formObj.form('get values');
    var backUri = "".concat(location.pathname).concat(location.search);
    result.data.backUri = backUri.replace(globalRootUrl, '');
    return result;
  },
  cbAfterSendForm: function cbAfterSendForm() {},
  initializeForm: function initializeForm() {
    Form.$formObj = loginForm.$formObj;
    Form.url = "".concat(globalRootUrl, "session/start");
    Form.validateRules = loginForm.validateRules;
    Form.cbBeforeSendForm = loginForm.cbBeforeSendForm;
    Form.cbAfterSendForm = loginForm.cbAfterSendForm;
    Form.keyboardShortcuts = false;
    Form.initialize();
  }
};
$(document).ready(function () {
  loginForm.initialize();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZXNzaW9uL2xvZ2luLWZvcm0uanMiXSwibmFtZXMiOlsibG9naW5Gb3JtIiwiJGZvcm1PYmoiLCIkIiwiJHN1Ym1pdEJ1dHRvbiIsIiRjaGVja0JveGVzIiwidmFsaWRhdGVSdWxlcyIsImxvZ2luIiwiaWRlbnRpZmllciIsInJ1bGVzIiwidHlwZSIsInByb21wdCIsImdsb2JhbFRyYW5zbGF0ZSIsImF1dGhfVmFsaWRhdGVMb2dpbk5vdEVtcHR5IiwicGFzc3dvcmQiLCJhdXRoX1ZhbGlkYXRlUGFzc3dvcmROb3RFbXB0eSIsImluaXRpYWxpemUiLCJpbml0aWFsaXplRm9ybSIsImtleXVwIiwiZXZlbnQiLCJrZXlDb2RlIiwiY2xpY2siLCJvbiIsInJlbW92ZSIsImNoZWNrYm94IiwiY2JCZWZvcmVTZW5kRm9ybSIsInNldHRpbmdzIiwicmVzdWx0IiwiZGF0YSIsImZvcm0iLCJiYWNrVXJpIiwibG9jYXRpb24iLCJwYXRobmFtZSIsInNlYXJjaCIsInJlcGxhY2UiLCJnbG9iYWxSb290VXJsIiwiY2JBZnRlclNlbmRGb3JtIiwiRm9ybSIsInVybCIsImtleWJvYXJkU2hvcnRjdXRzIiwiZG9jdW1lbnQiLCJyZWFkeSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBRUEsSUFBTUEsU0FBUyxHQUFHO0FBQ2pCQyxFQUFBQSxRQUFRLEVBQUVDLENBQUMsQ0FBQyxhQUFELENBRE07QUFFakJDLEVBQUFBLGFBQWEsRUFBRUQsQ0FBQyxDQUFDLGVBQUQsQ0FGQztBQUdqQkUsRUFBQUEsV0FBVyxFQUFFRixDQUFDLENBQUMsV0FBRCxDQUhHO0FBSWpCRyxFQUFBQSxhQUFhLEVBQUU7QUFDZEMsSUFBQUEsS0FBSyxFQUFFO0FBQ05DLE1BQUFBLFVBQVUsRUFBRSxPQUROO0FBRU5DLE1BQUFBLEtBQUssRUFBRSxDQUNOO0FBQ0NDLFFBQUFBLElBQUksRUFBRSxPQURQO0FBRUNDLFFBQUFBLE1BQU0sRUFBRUMsZUFBZSxDQUFDQztBQUZ6QixPQURNO0FBRkQsS0FETztBQVVkQyxJQUFBQSxRQUFRLEVBQUU7QUFDVE4sTUFBQUEsVUFBVSxFQUFFLFVBREg7QUFFVEMsTUFBQUEsS0FBSyxFQUFFLENBQ047QUFDQ0MsUUFBQUEsSUFBSSxFQUFFLE9BRFA7QUFFQ0MsUUFBQUEsTUFBTSxFQUFFQyxlQUFlLENBQUNHO0FBRnpCLE9BRE07QUFGRTtBQVZJLEdBSkU7QUF3QmpCQyxFQUFBQSxVQXhCaUIsd0JBd0JKO0FBQ1pmLElBQUFBLFNBQVMsQ0FBQ2dCLGNBQVY7QUFDQWQsSUFBQUEsQ0FBQyxDQUFDLE9BQUQsQ0FBRCxDQUNFZSxLQURGLENBQ1EsVUFBQ0MsS0FBRCxFQUFVO0FBQ2pCLFVBQUlBLEtBQUssQ0FBQ0MsT0FBTixLQUFrQixFQUF0QixFQUEwQjtBQUN6Qm5CLFFBQUFBLFNBQVMsQ0FBQ0csYUFBVixDQUF3QmlCLEtBQXhCO0FBQ0E7QUFDRCxLQUxELEVBTUVDLEVBTkYsQ0FNSyxPQU5MLEVBTWMsWUFBTTtBQUNuQm5CLE1BQUFBLENBQUMsQ0FBQyxlQUFELENBQUQsQ0FBbUJvQixNQUFuQjtBQUNBLEtBUkQ7QUFTQXRCLElBQUFBLFNBQVMsQ0FBQ0ksV0FBVixDQUFzQm1CLFFBQXRCO0FBQ0EsR0FwQ2dCO0FBcUNqQkMsRUFBQUEsZ0JBckNpQiw0QkFxQ0FDLFFBckNBLEVBcUNVO0FBQzFCLFFBQU1DLE1BQU0sR0FBR0QsUUFBZjtBQUNBQyxJQUFBQSxNQUFNLENBQUNDLElBQVAsR0FBYzNCLFNBQVMsQ0FBQ0MsUUFBVixDQUFtQjJCLElBQW5CLENBQXdCLFlBQXhCLENBQWQ7QUFDQSxRQUFJQyxPQUFPLGFBQU9DLFFBQVEsQ0FBQ0MsUUFBaEIsU0FBMkJELFFBQVEsQ0FBQ0UsTUFBcEMsQ0FBWDtBQUNBTixJQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWUUsT0FBWixHQUFzQkEsT0FBTyxDQUFDSSxPQUFSLENBQWdCQyxhQUFoQixFQUE4QixFQUE5QixDQUF0QjtBQUNBLFdBQU9SLE1BQVA7QUFDQSxHQTNDZ0I7QUE0Q2pCUyxFQUFBQSxlQTVDaUIsNkJBNENDLENBRWpCLENBOUNnQjtBQStDakJuQixFQUFBQSxjQS9DaUIsNEJBK0NBO0FBQ2hCb0IsSUFBQUEsSUFBSSxDQUFDbkMsUUFBTCxHQUFnQkQsU0FBUyxDQUFDQyxRQUExQjtBQUNBbUMsSUFBQUEsSUFBSSxDQUFDQyxHQUFMLGFBQWNILGFBQWQ7QUFDQUUsSUFBQUEsSUFBSSxDQUFDL0IsYUFBTCxHQUFxQkwsU0FBUyxDQUFDSyxhQUEvQjtBQUNBK0IsSUFBQUEsSUFBSSxDQUFDWixnQkFBTCxHQUF3QnhCLFNBQVMsQ0FBQ3dCLGdCQUFsQztBQUNBWSxJQUFBQSxJQUFJLENBQUNELGVBQUwsR0FBdUJuQyxTQUFTLENBQUNtQyxlQUFqQztBQUNBQyxJQUFBQSxJQUFJLENBQUNFLGlCQUFMLEdBQXlCLEtBQXpCO0FBQ0FGLElBQUFBLElBQUksQ0FBQ3JCLFVBQUw7QUFDQTtBQXZEZ0IsQ0FBbEI7QUEwREFiLENBQUMsQ0FBQ3FDLFFBQUQsQ0FBRCxDQUFZQyxLQUFaLENBQWtCLFlBQU07QUFDdkJ4QyxFQUFBQSxTQUFTLENBQUNlLFVBQVY7QUFDQSxDQUZEIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIE1pa29QQlggLSBmcmVlIHBob25lIHN5c3RlbSBmb3Igc21hbGwgYnVzaW5lc3NcbiAqIENvcHlyaWdodCAoQykgMjAxNy0yMDIwIEFsZXhleSBQb3J0bm92IGFuZCBOaWtvbGF5IEJla2V0b3ZcbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uXG4gKiBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICovXG5cbi8qIGdsb2JhbCBnbG9iYWxSb290VXJsLGdsb2JhbFRyYW5zbGF0ZSxGb3JtICovXG5cbmNvbnN0IGxvZ2luRm9ybSA9IHtcblx0JGZvcm1PYmo6ICQoJyNsb2dpbi1mb3JtJyksXG5cdCRzdWJtaXRCdXR0b246ICQoJyNzdWJtaXRidXR0b24nKSxcblx0JGNoZWNrQm94ZXM6ICQoJy5jaGVja2JveCcpLFxuXHR2YWxpZGF0ZVJ1bGVzOiB7XG5cdFx0bG9naW46IHtcblx0XHRcdGlkZW50aWZpZXI6ICdsb2dpbicsXG5cdFx0XHRydWxlczogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dHlwZTogJ2VtcHR5Jyxcblx0XHRcdFx0XHRwcm9tcHQ6IGdsb2JhbFRyYW5zbGF0ZS5hdXRoX1ZhbGlkYXRlTG9naW5Ob3RFbXB0eSxcblx0XHRcdFx0fSxcblx0XHRcdF0sXG5cdFx0fSxcblx0XHRwYXNzd29yZDoge1xuXHRcdFx0aWRlbnRpZmllcjogJ3Bhc3N3b3JkJyxcblx0XHRcdHJ1bGVzOiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR0eXBlOiAnZW1wdHknLFxuXHRcdFx0XHRcdHByb21wdDogZ2xvYmFsVHJhbnNsYXRlLmF1dGhfVmFsaWRhdGVQYXNzd29yZE5vdEVtcHR5LFxuXHRcdFx0XHR9LFxuXHRcdFx0XSxcblx0XHR9LFxuXHR9LFxuXHRpbml0aWFsaXplKCkge1xuXHRcdGxvZ2luRm9ybS5pbml0aWFsaXplRm9ybSgpO1xuXHRcdCQoJ2lucHV0Jylcblx0XHRcdC5rZXl1cCgoZXZlbnQpPT4ge1xuXHRcdFx0aWYgKGV2ZW50LmtleUNvZGUgPT09IDEzKSB7XG5cdFx0XHRcdGxvZ2luRm9ybS4kc3VibWl0QnV0dG9uLmNsaWNrKCk7XG5cdFx0XHR9XG5cdFx0fSlcblx0XHRcdC5vbignaW5wdXQnLCAoKSA9PiB7XG5cdFx0XHQkKCcubWVzc2FnZS5hamF4JykucmVtb3ZlKCk7XG5cdFx0fSk7XG5cdFx0bG9naW5Gb3JtLiRjaGVja0JveGVzLmNoZWNrYm94KCk7XG5cdH0sXG5cdGNiQmVmb3JlU2VuZEZvcm0oc2V0dGluZ3MpIHtcblx0XHRjb25zdCByZXN1bHQgPSBzZXR0aW5ncztcblx0XHRyZXN1bHQuZGF0YSA9IGxvZ2luRm9ybS4kZm9ybU9iai5mb3JtKCdnZXQgdmFsdWVzJyk7XG5cdFx0bGV0IGJhY2tVcmkgID0gYCR7bG9jYXRpb24ucGF0aG5hbWV9JHtsb2NhdGlvbi5zZWFyY2h9YDtcblx0XHRyZXN1bHQuZGF0YS5iYWNrVXJpID0gYmFja1VyaS5yZXBsYWNlKGdsb2JhbFJvb3RVcmwsJycpO1xuXHRcdHJldHVybiByZXN1bHQ7XG5cdH0sXG5cdGNiQWZ0ZXJTZW5kRm9ybSgpIHtcblxuXHR9LFxuXHRpbml0aWFsaXplRm9ybSgpIHtcblx0XHRGb3JtLiRmb3JtT2JqID0gbG9naW5Gb3JtLiRmb3JtT2JqO1xuXHRcdEZvcm0udXJsID0gYCR7Z2xvYmFsUm9vdFVybH1zZXNzaW9uL3N0YXJ0YDtcblx0XHRGb3JtLnZhbGlkYXRlUnVsZXMgPSBsb2dpbkZvcm0udmFsaWRhdGVSdWxlcztcblx0XHRGb3JtLmNiQmVmb3JlU2VuZEZvcm0gPSBsb2dpbkZvcm0uY2JCZWZvcmVTZW5kRm9ybTtcblx0XHRGb3JtLmNiQWZ0ZXJTZW5kRm9ybSA9IGxvZ2luRm9ybS5jYkFmdGVyU2VuZEZvcm07XG5cdFx0Rm9ybS5rZXlib2FyZFNob3J0Y3V0cyA9IGZhbHNlO1xuXHRcdEZvcm0uaW5pdGlhbGl6ZSgpO1xuXHR9LFxufTtcblxuJChkb2N1bWVudCkucmVhZHkoKCkgPT4ge1xuXHRsb2dpbkZvcm0uaW5pdGlhbGl6ZSgpO1xufSk7XG5cbiJdfQ==